# Makefile for pxcp
#
# @configure_input@

.c.o:
	$(CC) $(CPPFLAGS) $(CFLAGS) -c -o $@ $<

PACKAGE =		@PACKAGE_TARNAME@
VERSION =		@PACKAGE_VERSION@

srcdir =		@srcdir@
VPATH =			@srcdir@

prefix =		@prefix@
exec_prefix =		@exec_prefix@
datarootdir =           @datarootdir@

BINDIR =		@bindir@
MANDIR =		@mandir@
MAN1DIR =		${MANDIR}/man1

CPPFLAGS =		@CPPFLAGS@ -I. -I$(srcdir)
CFLAGS =		@CFLAGS@ -Wall
LDFLAGS =		@LDFLAGS@
LIBS =			@LIBS@

CC = 			@CC@
INSTALL =		@INSTALL@
TAR =			tar
@SET_MAKE@

VALGRIND =		valgrind
VALGRINDFLAGS =		--leak-check=full --track-origins=yes --error-exitcode=1 # --show-leak-kinds=all

PROGRAMS =	        pxcp

PXCP_OBJS =             pxcp.o fsobj.o acls.o misc.o digest.o xxhash.o fletcher.o

all: $(PROGRAMS)

fletcher.o: fletcher.c fletcher.h config.h
xxhash.o:   xxhash.c xxhash.h config.h
digest.o:   digest.c digest.h xxhash.h fletcher.h config.h
misc.o:     misc.c misc.h config.h
acls.o:     acls.c acls.h config.h
fsobj.o:    fsobj.c fsobj.h acls.h misc.h digest.h config.h
pxcp.o:     pxcp.c fsobj.h acls.h misc.h config.h

pxcp: $(PXCP_OBJS)
	$(CC) $(LDFLAGS) -o pxcp $(PXCP_OBJS) $(LIBS)

configure: configure.ac
	autoconf

config.h.in: configure.ac
	autoheader


clean:
	-rm -f core *.core *.o pxcp; find . \( -name '*~' -o -name '#*' \) -print0 | xargs -0 rm -f

distclean: clean
	rm -fr config.status config.log autom4te.cache Makefile config.h t

# Check targets
setup-check-acl:
	@if [ "`uname -s`" = "Linux" ]; then \
		if [ "`df --output=fstype t/s/f.txt | tail -1`" = "nfs4" ]; then \
			nfs4_setfacl -a A::root:r t/s/f.txt; \
		else \
			setfacl -m root:r t/s/f.txt; \
		fi \
	 fi
	@if [ `uname -s` = "FreeBSD" ]; then setfacl -m user:root:r::allow t/s/f.txt; fi
	@if [ `uname -s` = "Darwin" ];  then chmod +a "root allow read" t/s/f.txt; fi

# Check targets
setup-check-attrs:
	@if [ "`uname -s`" = "Linux" ]; then \
		if df --output=fstype t/s/f.txt | fgrep -q nfs; then \
			echo "Can not test XAttrs on NFS"; \
		else \
			setfattr -n user.pxcptest -v Hello t/s/f.txt; \
		fi \
	 fi
	@if [ `uname -s` = "FreeBSD" ]; then setextattr user pxcptest Hello t/s/f.txt; fi
	@if [ `uname -s` = "Darwin" ];  then xattr -w pxcptest Hello t/s/f.txt; fi

setup-check-tree:
	@rm -fr t && mkdir -p t/s t/s/d t/e t/d && touch t/s/f.txt && chmod 0600 t/s/f.txt && chmod 0750 t/s/d && ln -s nowhere t/s/symlink && echo "Hello, World!" >t/s/d/f2.txt

setup-check: pxcp setup-check-tree setup-check-acl setup-check-attrs

check-1: setup-check
	@echo ""; echo "--- Check 1: Cloning t/s -> t/d"
	@./pxcp -vrAXt  t/s t/d && echo "--> OK"

check-2: setup-check
	@echo ""; echo "--- Check 2: Cloning t/s -> t/d (again, with force)"
	@./pxcp -vfrAX  t/s t/d && echo "--> OK"

check-3: setup-check
	@echo ""; echo "--- Check 3: Cloning t/s -> t/d (again, with force & sync)"
	@./pxcp -vfrAXs t/s t/d && echo "--> OK"

check-4: setup-check
	@echo ""; echo "--- Check 4: Cloning t/s -> t/d (again, with fletcher16)"
	@./pxcp -vrAXs --checksum=fletcher16 t/s t/d && echo "--> OK"

check-5: setup-check
	@echo ""; echo "--- Check 5: Cloning t/s -> t/d (again, with prune)"
	@rm -fr t/d/d && touch t/d/d && ./pxcp -vrAXpm  t/s t/d && echo "--> OK"

check-6: check-5
	@echo ""; echo "--- Check 6: ls -alR"
	@(cd t/s ; ls -alR . | grep -v '^total') >/tmp/pxcp-s.out && (cd t/d ; ls -alR . | grep -v '^total') >/tmp/pxcp-d.out && cat /tmp/pxcp-d.out && cmp /tmp/pxcp-s.out /tmp/pxcp-d.out && echo "--> OK"

check-7: check-5
	@echo ""; echo "--- Check 7: File Content"
	@cat t/d/d/f2.txt && cmp t/s/d/f2.txt t/d/d/f2.txt && echo "--> OK"

check-8: check-5
	@echo ""
	@if [ "`uname -s`" = "Linux" ]; then \
		if [ "`df --output=fstype t/s/f.txt|tail -1`" = "nfs4" ]; then \
			echo "--- Check 8: ACL ACE entry copied (Linux, nfs4)"; \
			nfs4_getfacl t/d/f.txt | grep '^A::root@.*:r$$' && echo "--> OK"; \
		else \
			echo "--- Check 8: ACL ACE entry copied (Linux, non-nfs4)"; \
			getfacl t/d/f.txt | fgrep 'user:root:r--' && echo "--> OK"; \
		fi \
	 fi
	@if [ `uname -s` = "FreeBSD" ]; then \
		echo "--- Check 8: ACL ACE entry copied (FreeBSD)"; \
		getfacl t/d/f.txt | fgrep 'user:root:r--' && echo "--> OK"; \
	 fi
	@if [ `uname -s` = "Darwin" ]; then \
		echo "--- Check 8: ACL ACE entry copied (MacOS)"; \
		ls -le t/d/f.txt | fgrep 'user:root allow read' && echo "--> OK"; \
	 fi

check-9: check-5
	@echo ""
	@if [ "`uname -s`" = "Linux" ]; then \
		echo "--- Check 9: XAttr entry copied (Linux)"; \
		if df --output=fstype t/s/f.txt | fgrep -q nfs; then \
			echo "--> Skipped (Can not test XAttrs on NFS)"; \
		else \
			getfattr -n user.pxcptest t/d/f.txt && echo "--> OK"; \
		fi \
	 fi
	@if [ `uname -s` = "FreeBSD" ]; then \
		echo "--- Check 9: Extended Attribute entry copied (FreeBSD)"; \
		getextattr user pxcptest t/d/f.txt | fgrep 'Hello' && echo "--> OK"; \
	 fi
	@if [ `uname -s` = "Darwin" ]; then \
		echo "--- Check 9: ACL ACE entry copied (MacOS)"; \
		xattr -p pxcptest t/d/f.txt | fgrep 'Hello' && echo "--> OK"; \
	 fi

check-10: check-5
	@echo ""; echo "--- Check 10: Cloning t/e -> t/d (with purge)"
	@./pxcp -vrAp t/e t/d && echo "--> OK"

check-11: check-10
	@echo ""; echo "--- Check 11: Cloning t/e -> t/d (again, with purge)"
	@./pxcp -vrAp t/e t/d && echo "--> OK"

check-12: check-11
	@echo ""; echo "--- Check 12: t/d should be empty"
	@rmdir t/d && echo "--> OK"

check-13: setup-check
	@echo ""; echo "--- Check 13: XXHASH32 Checksum"
	@./pxcp -L --checksum=xxhash32 t/s/d/f2.txt | fgrep '[e8 43 d0 9e]' && echo  "--> OK"

check-14: setup-check
	@echo ""; echo "--- Check 14: XXHASH64 Checksum"
	@./pxcp -L --checksum=xxhash64 t/s/d/f2.txt | fgrep '[f1 f9 8e b6 a7 e5 6b 40]' && echo "--> OK"

check-15: setup-check
	@echo ""; echo "--- Check 15: FLETCHER16 Checksum"
	@./pxcp -L --checksum=fletcher16 t/s/d/f2.txt | fgrep '[77 28]' && echo "--> OK"

check-16: setup-check
	@echo ""; echo "--- Check 16: FLETCHER32 Checksum"
	@./pxcp -L --checksum=fletcher32 t/s/d/f2.txt | fgrep '[41 36 7a b4]' && echo "--> OK"

check:	pxcp setup-check check-1 check-2 check-3 check-4 check-5 check-6 check-7 check-8 check-9 check-10 check-11 check-12 check-13 check-14 check-15 check-16
	@echo ""; echo "All tests passed."


# Git targets
push: 	distclean
	git add -A && git commit -a && git push

pull:
	git pull
